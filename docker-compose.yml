version: "3.8"

services:
  telegram:
    build:
      context: .
    command: sh -c "python manage.py telegram"
    env_file:
      - .env
    depends_on:
      - app
      - db

  app:
    build:
      context: .
    ports:
      - "9001:9000"
    volumes:
      - my_media:/files/media
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py check_admin &&
            python manage.py runserver 0.0.0.0:9000"
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:16.0-alpine3.17
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - .env
    volumes:
      - ./data/db:$PGDATA

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  celery-worker:
    build:
      context: .
    command: "celery -A library_service worker -l info"
    volumes:
      - .:/app
    depends_on:
      - app
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  celery_beat:
    build: .
    command: sh -c "celery -A library_service beat -l info -S django"
    depends_on:
      - app
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

volumes:
  my_media:
  redis-data:
  celery-beat-schedule:
    driver: local
